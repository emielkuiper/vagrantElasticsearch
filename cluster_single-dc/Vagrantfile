Vagrant.configure("2") do |config|

  ###
  ### NOTE!!!
  ###
  ### Due to a Vagrant race condition between
  ### "setting hostname through Vagrant"
  ### and "systemctl restart network.service"
  ### no hostnames will be set using Vagrant.
  ### This will have to be done through Ansible afterwards!


  ###
  ### Satisfy dependancies
  ###
  ### This plugin will create an entry in /etc/hosts when vagrant up is performed
  ### Please enable the following line in /etc/sudoers:   %wheel  ALL=(ALL)       NOPASSWD: ALL

#  unless Vagrant.has_plugin?("vagrant-hostsupdater")
#    system("vagrant plugin install vagrant-hostsupdater")
#    puts "Dependency hostsupdater installed, please try the command again."
#    exit
#  end


  ###
  ### Define 3x master node
  ###

  config.vm.define "dc1_es_master_01" do |dc1_es_master_01|
    dc1_es_master_01.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_master_01.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_master_01.vm.network :"private_network", ip: "172.28.129.100", auto_config: true
    dc1_es_master_01.vm.network "forwarded_port", guest: 9200, host: 19200, protocol: "tcp"
    # left as an example
    # dc1_es_master_01.hostsupdater.aliases = ["dc1_es_master_01"]
    dc1_es_master_01.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_master_01"]
    end # End of "dc1_es_master_01.vm.provider"
  end   # End of config.vm.define "dc1_es_master_01"

  config.vm.define "dc1_es_master_02" do |dc1_es_master_02|
    dc1_es_master_02.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_master_02.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_master_02.vm.network :"private_network", ip: "172.28.129.101", auto_config: true
    dc1_es_master_02.vm.network "forwarded_port", guest: 9200, host: 29200, protocol: "tcp"
    dc1_es_master_02.vm.network "forwarded_port", guest: 5601, host: 25601, protocol: "tcp"
    dc1_es_master_02.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_master_02"]
    end # End of "dc1_es_master_02.vm.provider"
  end   # End of config.vm.define "dc1_es_master_02"

  config.vm.define "dc1_es_master_03" do |dc1_es_master_03|
    dc1_es_master_03.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_master_03.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_master_03.vm.network :"private_network", ip: "172.28.129.102", auto_config: true
    dc1_es_master_03.vm.network "forwarded_port", guest: 9200, host: 39200, protocol: "tcp"
    dc1_es_master_03.vm.network "forwarded_port", guest: 5601, host: 35601, protocol: "tcp"
    dc1_es_master_03.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_master_03"]
    end # End of "dc1_es_master_03.vm.provider"
  end   # End of config.vm.define "dc1_es_master_03"


  ###
  ### Define 4x data node
  ###

  config.vm.define "dc1_es_data_01" do |dc1_es_data_01|
    dc1_es_data_01.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_data_01.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_data_01.vm.network :"private_network", ip: "172.28.129.103", auto_config: true
    dc1_es_data_01.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_data_01"]
    end # End of "dc1_es_data_01.vm.provider"
  end   # End of config.vm.define "dc1_es_data_01"

  config.vm.define "dc1_es_data_02" do |dc1_es_data_02|
    dc1_es_data_02.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_data_02.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_data_02.vm.network :"private_network", ip: "172.28.129.104", auto_config: true
    dc1_es_data_02.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_data_02"]
    end # End of "dc1_es_data_02.vm.provider"
  end   # End of config.vm.define "dc1_es_data_02"

  config.vm.define "dc1_es_data_03" do |dc1_es_data_03|
    dc1_es_data_03.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_data_03.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_data_03.vm.network :"private_network", ip: "172.28.129.105", auto_config: true
    dc1_es_data_03.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_data_03"]
    end # End of "dc1_es_data_03.vm.provider"
  end   # End of config.vm.define "dc1_es_data_03"

  config.vm.define "dc1_es_data_04" do |dc1_es_data_04|
    dc1_es_data_04.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_data_04.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_data_04.vm.network :"private_network", ip: "172.28.129.106", auto_config: true
    dc1_es_data_04.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_data_04"]
    end # End of "dc1_es_data_04.vm.provider"
  end   # End of config.vm.define "dc1_es_data_04"


  ###
  ### Define 2x logstash node
  ###

  config.vm.define "dc1_es_logstash_01" do |dc1_es_logstash_01|
    dc1_es_logstash_01.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_logstash_01.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_logstash_01.vm.network :"private_network", ip: "172.28.129.107", auto_config: true
    dc1_es_logstash_01.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_logstash_01"]
    end # End of "dc1_es_logstash_01.vm.provider"
  end   # End of config.vm.define "dc1_es_logstash_01"

  config.vm.define "dc1_es_logstash_02" do |dc1_es_logstash_02|
    dc1_es_logstash_02.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_logstash_02.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_logstash_02.vm.network :"private_network", ip: "172.28.129.110", auto_config: true
    dc1_es_logstash_02.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_logstash_02"]
    end # End of "dc1_es_logstash_02.vm.provider"
  end   # End of config.vm.define "dc1_es_logstash_02"



  ###
  ### Define 1x Kibana node
  ###

  config.vm.define "dc1_es_kibana_01" do |dc1_es_kibana_01|
    dc1_es_kibana_01.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_kibana_01.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_kibana_01.vm.network :"private_network", ip: "172.28.129.108", auto_config: true
    dc1_es_kibana_01.vm.network "forwarded_port", guest: 5601, host: 5601, protocol: "tcp", guest_ip: "172.28.129.108"
    dc1_es_kibana_01.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_kibana_01"]
    end # End of "dc1_es_kibana_01.vm.provider"
  end   # End of config.vm.define "dc1_es_kibana_01"


  ###
  ### Define 1x client node
  ###

  config.vm.define "dc1_es_client_01" do |dc1_es_client_01|
    dc1_es_client_01.vm.synced_folder "./vagrant", "/vagrant"
    dc1_es_client_01.vm.box = "oraclelinuxworld/base_elasticsearch"
    dc1_es_client_01.vm.network :"private_network", ip: "172.28.129.109", auto_config: true
    dc1_es_client_01.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--cpus", "2"]
      v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--name", "dc1_es_client_01"]
    end # End of "dc1_es_client_01.vm.provider"
  end   # End of config.vm.define "dc1_es_client_01"


  ###
  ### Define 2x Machine Learning node
  ###

  # config.vm.define "dc1_es_machinelearning_01" do |dc1_es_machinelearning_01|
  #   dc1_es_machinelearning_01.vm.synced_folder "./vagrant", "/vagrant"
  #   dc1_es_machinelearning_01.vm.box = "oraclelinuxworld/base_elasticsearch"
  #   dc1_es_machinelearning_01.vm.network :"private_network", ip: "172.28.129.111", auto_config: true
  #   dc1_es_machinelearning_01.vm.provider :virtualbox do |v|
  #     v.customize ["modifyvm", :id, "--memory", 1024]
  #     v.customize ["modifyvm", :id, "--cpus", "2"]
  #     v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
  #     v.customize ["modifyvm", :id, "--usb", "off"]
  #     v.customize ["modifyvm", :id, "--audio", "none"]
  #     v.customize ["modifyvm", :id, "--name", "dc1_es_machinelearning_01"]
  #   end # End of "dc1_es_machinelearning_01.vm.provider"
  # end   # End of config.vm.define "dc1_es_machinelearning_01"
  #
  # config.vm.define "dc1_es_machinelearning_02" do |dc1_es_machinelearning_02|
  #   dc1_es_machinelearning_02.vm.synced_folder "./vagrant", "/vagrant"
  #   dc1_es_machinelearning_02.vm.box = "oraclelinuxworld/base_elasticsearch"
  #   dc1_es_machinelearning_02.vm.network :"private_network", ip: "172.28.129.112", auto_config: true
  #   dc1_es_machinelearning_02.vm.provider :virtualbox do |v|
  #     v.customize ["modifyvm", :id, "--memory", 1024]
  #     v.customize ["modifyvm", :id, "--cpus", "2"]
  #     v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
  #     v.customize ["modifyvm", :id, "--usb", "off"]
  #     v.customize ["modifyvm", :id, "--audio", "none"]
  #     v.customize ["modifyvm", :id, "--name", "dc1_es_machinelearning_02"]
  #   end # End of "dc1_es_machinelearning_02.vm.provider"
  # end   # End of config.vm.define "dc1_es_machinelearning_02"


end       # End of "Vagrant.configure"
